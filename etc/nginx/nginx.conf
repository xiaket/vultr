server {
  listen  80;
  server_name  blog.xiaket.org;

  # tell users to go to SSL version this time
  if ($ssl_protocol = "") {
    rewrite ^ https://$server_name$request_uri? permanent;
  }

  if ($http_host = xiaket.org){
    return 303 https://blog.xiaket.org$request_uri;
  }
}

server {
  listen  443 ssl;
  server_name  blog.xiaket.org;

  # tell users to go to SSL version next time
  add_header Strict-Transport-Security "max-age=15768000; includeSubdomains;";

  # tell the browser dont allow hosting in a frame
  add_header X-Frame-Options DENY;

  # tell the browser we can only talk to self and google analytics.
  add_header X-Content-Security-Policy "default-src 'self'";

  ssl_protocols               TLSv1 TLSv1.1 TLSv1.2;

  # ciphers chosen for forward secrecy an compatibility
  ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";

  #ssl_prefer_server_ciphers   on;
  ssl_certificate_key         /etc/nginx/ssl/blog.xiaket.org.key;
  ssl_certificate             /etc/nginx/ssl/blog.xiaket.org.crt;

  ssl_session_cache    shared:SSL:10m;
  ssl_session_timeout  10m;

  # enable ocsp stapling
  resolver 8.8.8.8;
  ssl_stapling on;
  ssl_trusted_certificate /etc/nginx/ssl/blog.xiaket.org.crt;

  location / {
      root   /usr/share/nginx/html;
      index  index.html index.htm;
  }

  error_page  404              /404.html;
  error_page   500 502 503 504  /50x.html;
}
